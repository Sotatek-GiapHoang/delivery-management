version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: delivery_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - delivery_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - delivery_network

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - delivery_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - delivery_network

  gateway-service:
    build: ./gateway-service
    ports:
      - "8080:8080"
    environment:
      USER_SERVICE_URL: http://user-service:8080
      ORDER_SERVICE_URL: http://order-service:8080
      DELIVERY_SERVICE_URL: http://delivery-service:8080
    depends_on:
      - user-service
      - order-service
      - delivery-service
    networks:
      - delivery_network

  order-service:
    build: ./order-service
    depends_on:
      - postgres
      - kafka
    environment:
      DB_HOST: postgres
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: delivery_db
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: order_events
      KAFKA_GROUP_ID: order_service
    ports:
      - "8081:8080"
    networks:
      - delivery_network

  delivery-service:
    build: ./delivery-service
    depends_on:
      - postgres
      - kafka
    environment:
      DB_HOST: postgres
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: delivery_db
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: order_events
      KAFKA_GROUP_ID: delivery_service
    ports:
      - "8082:8080"
    networks:
      - delivery_network

  user-service:
    build: ./user-service
    depends_on:
      - postgres
      - kafka
    environment:
      DB_HOST: postgres
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: delivery_db
      KAFKA_BROKER: kafka:29092
    ports:
      - "8083:8080"
    networks:
      - delivery_network

  notification-service:
    build: ./notification-service
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092
    ports:
      - "8084:8080"
    networks:
      - delivery_network

volumes:
  postgres_data:

networks:
  delivery_network:
    driver: bridge